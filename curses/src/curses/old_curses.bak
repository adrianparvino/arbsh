#include <curses/gcurses.h> 

struct ansiglb ansiglb;

/* functions */
int fastgetch() 
{ 
	char s[1]; 
	s[0] = 0; 
	read(0, s, 1); 
	return s[0]; 
} 

int termcatch(int flags, int reset)
{ 
	static int set = 0;
	static struct termios term, oterm; 
	if ( set == 0 )
	{
		if ((tcgetattr(0, &oterm)) != 0 )
			return -1;
		memcpy(&term, &oterm, sizeof(term));
		set = 1;
	} 
	if ( reset == 0 )
	{
		term.c_lflag &= (flags);
		term.c_cc[VMIN] = 1;
		term.c_cc[VTIME] = 0; 
		if ((tcsetattr(0, TCSANOW, &term)) == 0 )
			return 0; 
	}else if ( reset == 1 )
		if ((tcsetattr(0, TCSANOW, &oterm)) == 0 )
			return 0; 
	return -1; 
}

void setcursor(size_t x, size_t y)
{ 
	char str[1025] = { 0 };
	size_t len = 0;
	len = sprintf(str, "\033[%zu;%zuH", x, y);
	write(0, str, len);
} 

int ansiinit(void)
{
	int ret = 0;
	struct winsize w;

	if ( (ret = ioctl(0, TIOCGWINSZ, &w)) == -1)
		return ret;
	ansiglb.col = w.ws_col;
	ansiglb.row = w.ws_row; 
	write(1, T_ERASEALL, T_ERASEALL_SZ);
	write(1,T_INSERTRESET, T_INSERTRESET_SZ);
	return ret;
} 


