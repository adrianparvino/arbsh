Arbitrary Precision Mathematics Library



BUILDING:
---------

	cd arbprec
	make 


TESTING:
--------

	Run the test binary:

		./tests/test-arbitrary-precision 988983483.14891487417128 908408.38034834834857345834 10 100


API:
----

REFERENCES:
-----------

	https://gmplib.org/manual/Division-Algorithms.html#Division-Algorithms

	http://personal.maths.surrey.ac.uk/st/H.Bruin/MMath/Cardinality.html

	https://gmplib.org/manual/Karatsuba-Multiplication.html#Karatsuba-Multiplication

	https://gmplib.org/manual/Multiplication-Algorithms.html#Multiplication-Algorithms

	http://www.cs.utsa.edu/~wagner/CS3343/newton/division.html

	http://mathworld.wolfram.com/NewtonsIteration.html

	An RFC about base64 encoding:

	http://www.rfc-editor.org/rfc/rfc4648.txt

	See Knuth Vol 2. p237. for a division routine that may be faster.

	http://www.cs.utsa.edu/~wagner/CS3343/newton/division.html

        https://en.wikipedia.org/wiki/Division_algorithm#Newton.E2.80.93Raphson_division

        https://stackoverflow.com/questions/9939322/fast-1-x-division-reciprocal

        http://www.jamesbrennan.org/algebra/numbers/real_number_system.htm

        pubs.opengroup.org/onlinepubs/9699919799/utilities/bc.html#top

        https://en.wikipedia.org/wiki/Karatsuba_algorithm

        this site loads too slow, i have not viewed it yet:
        http://www.codewithc.com/c-program-for-newton-raphson-method/


        https://stackoverflow.com/questions/2661541/picking-good-first-estimates-for-goldschmidt-division


CONTACT:
--------

	cm0graff@gmail.com

